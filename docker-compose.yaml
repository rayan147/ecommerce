version: '3.4'

services:
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile.prod
  #     # target: dev
  #   restart: unless-stopped
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   volumes: 
  #       - ./frontend:/app/frontend
  #   image: fronted:v1.0.0
  #   ports:
  #     - '80:80'
    
    networks:
      - app-network
    depends_on:
      - api
  redis:
    image: 'redis'
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    volumes:
      - ./redis/conf:/usr/local/etc/redis
    networks:
      - app-network 
 

  nginx_proxy:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: proxy:v1.0.1
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    ports:
      - '9080:9080'
   
  
     
  api:
    environment:
    -  NODE_ENV=$NODE_ENV
    -  PORT=$PORT
    -  MONGO_URL_PROD=$MONGO_URL_PROD
    -  JWT_TOKEN_SECRET=$JWT_TOKEN_SECRET
    -  PAYPAL_CLIENT_ID=$PAYPAL_CLIENT_ID
    -  REDIS_SERVER_IP=redis
    -  REDIS_PORT=6379
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: api:v1.1.3
    container_name: api
    restart: unless-stopped
    volumes:
    - ./backend:/app/backend
    networks:
      - app-network

  uploadS3:
    environment:
    -  AWS_BUCKET_IMAGES_NAME=$AWS_BUCKET_IMAGES_NAME
    -  AWS_BUCKET_REGION=$AWS_BUCKET_REGION
    -  AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    -  AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    -  PORT_S3=$PORT_S3
    build:
      context: ./uploadS3
      dockerfile: Dockerfile
    image: v1.0.5
    container_name: uploadS3
    restart: unless-stopped
    volumes:
    - ./uploadS3:/app/uploadS3
    networks:
      - app-network

networks:
  app-network:
     driver: bridge

 
      
  

