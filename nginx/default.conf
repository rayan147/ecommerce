upstream api-server {
  server nginx_proxy:5000;
}
# upstream uploadS3-microserver {
#   server uploadS3:5001;
# }
# upstream frontend-client {
#   server frontend:80;
# }


server {
  listen 80 ;
  client_max_body_size 100M;
  large_client_header_buffers 4 32k;
  # location / {
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_pass http://frontend-client;
  # }


  location /api/ {
    # pass headers and body along
    proxy_pass_request_headers on;
    proxy_pass_request_body on;

    # set some headers to make sure the reverse proxy is passing along everything necessary
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://api:5000/;
  }
  # location =/images {
  #     rewrite ^/images/(.*) /$1 break;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_pass http://uploadS3-microserver/;
  # }
}