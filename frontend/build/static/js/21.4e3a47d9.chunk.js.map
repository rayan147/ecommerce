{"version":3,"sources":["constants/internalState.js","store/internalState/internalRegisterState.js","reducers/internal/registerReducer.js","actions/user/getUserDetails.js","actions/order/getUserOrderList.js","actions/user/updateUserProfile.js","pages/Profile.js"],"names":["INTERNAL_STATE","NAME","EMAIL","PASSWORD","CONFIRM_PASSWORD","ERROR_MESSAGE","ADDRESS","COUNTRY","ZIP_CODE","CITY","STATE","initialState","name","email","password","confirmPassword","errorMessage","profileReducer","state","action","type","payload","USER_DETAILS_REQUEST","USER_CONSTANTS","USER_DETAILS_FAILURE","USER_DETAILS_SUCCESS","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","response","message","ORDER_USER_LIST_SUCCESS","ORDER_STATUS","ORDER_USER_LIST_FAILURE","ORDER_USER_LIST_REQUEST_START","getUserOrderList","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAILURE","USER_UPDATE_PROFILE_SUCCESS","USER_LOGIN_SUCCESS","updateUserProfile","USER_UPDATE_PROFILE_RESTORE_REQUEST","user","put","localStorage","setItem","JSON","stringify","ERROR_Alert","useStyles","makeStyles","theme","root","flexGrow","title","marginTop","spacing","marginBottom","subTotalItem","boxShadow","table","minWidth","Profile","location","history","classes","useReducer","dispatchUseReducer","errorAlert","useDispatch","useSelector","userDetails","userUpdatedProfile","success","error","getUserListOrder","loadingOrders","isLoasding","errorOrders","myOrders","useEffect","push","Grid","container","className","item","xs","lg","Typography","component","variant","color","Alert","severity","AlertTitle","onSubmit","e","preventDefault","updatedUserDetails","user_id","_id","noValidate","autoComplete","TextField","label","fullWidth","autoFocus","placeholder","value","required","onChange","target","Button","style","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","order","scope","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","to"],"mappings":"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","file":"static/js/21.4e3a47d9.chunk.js","sourcesContent":["const INTERNAL_STATE = {\n    NAME : 'name',\n    EMAIL : 'email',\n    PASSWORD : 'password',\n    CONFIRM_PASSWORD : 'confirmPassword',\n    ERROR_MESSAGE : 'errorMessage',\n    ADDRESS:'ADDRESS',\n    COUNTRY:'COUNTRY',\n    ZIP_CODE:'ZIP_CODE',\n    CITY:'CITY',\n    STATE:'STATE'\n}\nexport default INTERNAL_STATE;","const initialState = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    errorMessage:null\n  }\n  export default initialState","import INTERNAL_STATE from '../../constants/internalState'\n\nconst {\n    NAME,\n    EMAIL,\n    PASSWORD,\n    CONFIRM_PASSWORD,\n    ERROR_MESSAGE\n} = INTERNAL_STATE\nconst profileReducer = (state, action) => {\n    switch (action.type) {\n      case NAME:\n        return {...state,name:action.payload}\n    case EMAIL:\n        return {...state,email:action.payload}\n    case PASSWORD:\n        return {...state,password:action.payload}\n    case CONFIRM_PASSWORD:\n        return {...state,confirmPassword:action.payload}\n      case ERROR_MESSAGE:\n        return {\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          errorMessage: action.errorMessage\n        }\n      default:\n        return state\n    }\n  }\n  export default profileReducer","import axios from \"axios\"\nimport { USER_CONSTANTS } from \"../../constants/userConstants\"\n\nconst  {\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_FAILURE,\n    USER_DETAILS_SUCCESS,\n    } = USER_CONSTANTS\n    const getUserDetails = (id) => async (dispatch,getState) => {\n        try {\n          dispatch({\n            type: USER_DETAILS_REQUEST,\n          })\n        const {userLogin:{userInfo}} = getState()\n          const config = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${userInfo.token}`\n            },\n          }\n      \n          const { data } = await axios.get( `/api/users/${id}`, config\n          )\n      \n       dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n          })\n      \n        \n        } catch (error) {\n          dispatch({\n            type: USER_DETAILS_FAILURE,\n            payload: error?.response?.data?.message ?? error.message\n          })\n        }\n      }\n\nexport default getUserDetails","\nimport axios from \"axios\"\n\nimport ORDER_STATUS from \"../../constants/orderConstants\";\n\nconst {\n    ORDER_USER_LIST_SUCCESS,\n    ORDER_USER_LIST_FAILURE,\n    ORDER_USER_LIST_REQUEST_START,\n     \n } = ORDER_STATUS;\n \n\nconst getUserOrderList = () => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: ORDER_USER_LIST_REQUEST_START,\n      })\n    const {userLogin:{userInfo}} = getState()\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        },\n      }\n  \n      const { data } = await axios.get( `/api/orders/myorders`, config\n      )\n  \n   \n\n    dispatch({  \n        type: ORDER_USER_LIST_SUCCESS,\n        payload: data,\n      })\n     \n    } catch (error) {\n      dispatch({\n        type: ORDER_USER_LIST_FAILURE,\n        payload: error?.response?.data?.message ?? error.message\n         \n      })\n    }\n  }\n\nexport default getUserOrderList","import axios from \"axios\"\nimport { USER_CONSTANTS } from \"../../constants/userConstants\"\n\nconst  {\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_FAILURE,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_LOGIN_SUCCESS,\n    USER_UPDATE_PROFILE_RESTORE_REQUEST\n    } = USER_CONSTANTS\n    const updateUserProfile = (user) => async (dispatch,getState) => {\n        try {\n          dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n          })\n        const {userLogin:{userInfo}} = getState()\n          const config = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${userInfo.token}`\n            },\n          }\n      \n          const { data } = await axios.put( `/api/users/profile`,user, config\n          )\n      \n       dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n          })\n      \n       dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n          })\n      \n        localStorage.setItem('userInfo', JSON.stringify(data))\n        } catch (error) {\n          dispatch({\n            type: USER_UPDATE_PROFILE_FAILURE,\n            payload:  error?.response?.data?.message ?? error.message\n          })\n        }\n      }\n\nexport default updateUserProfile","import {useEffect,useReducer} from 'react'\n\n\nimport {useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\nimport getUserDetails from '../actions/user/getUserDetails'\nimport getUserOrderList from '../actions/order/getUserOrderList'\nimport updateUserProfile from '../actions/user/updateUserProfile'\nimport initialState from '../store/internalState/internalRegisterState'\nimport profileReducer from '../reducers/internal/registerReducer'\nimport INTERNAL_STATE from '../constants/internalState'\nimport { USER_CONSTANTS} from '../constants/userConstants'\n\nconst { USER_UPDATE_PROFILE_RESTORE_REQUEST } = USER_CONSTANTS\n\n// // LOADS WHEN REQUESTED\n// const  Alert = lazy(() =>  import('../components/view/Alert'))\n\nconst {NAME,EMAIL,ERROR_Alert,PASSWORD,CONFIRM_PASSWORD} = INTERNAL_STATE\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  subTotalItem: {\n      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 25px 50px -12px',\n      marginTop: '3.3rem',\n      \n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst Profile = ({location,history}) => {\n\n  const classes = useStyles();\n\n    const [state, dispatchUseReducer] = useReducer(profileReducer, initialState)\n    const {name,email,password,confirmPassword,errorAlert} = state\n\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const {user} = userDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdatedProfile = useSelector(state => state.userUpdatedProfile)\n    const {success,error} =  userUpdatedProfile\n\n    const getUserListOrder = useSelector(state => state.getUserListOrder)\n    const {isLoasding :loadingOrders,error: errorOrders,myOrders} = getUserListOrder\n    \n   \n\n\n   useEffect(() => {\n     if(!userInfo){\n        history.push('/')\n     }\n    },[userInfo,history])\n\n    useEffect(() => {\n       if(!user || !user.name ||success){ \n            dispatch({type:USER_UPDATE_PROFILE_RESTORE_REQUEST})\n            dispatch(getUserDetails('profile'))\n            dispatch(getUserOrderList())\n           return\n        } \n      },[user,success,dispatch,getUserListOrder])\n     \n      \n   useEffect(() => {\n       if(user && user.name && success){\n       dispatchUseReducer({type:EMAIL,payload:user.email})\n       dispatchUseReducer({type:NAME,payload:user.name})\n       }\n       return\n       \n    },[dispatchUseReducer,dispatch,userInfo,history,user,success])\n     \n   \n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            dispatchUseReducer({\n              type:ERROR_Alert,\n              errorAlert:'Passwords do not match'\n            })\n          return\n        }\n        const updatedUserDetails ={\n          user_id:user._id,\n          name:state.name,\n          email:state.email,\n          password:state.password\n        }\n        // console.log({updatedUserDetails})\n        // DISPATCH UPDATES PROFILE\n        dispatch(updateUserProfile(updatedUserDetails))\n    }\n\n\n\n    return (\n      <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n      <Grid container spacing={3}>\n      <Grid  item lg={3}>\n            <Typography \n          component=\"div\" \n          variant=\"h5\" \n          className={classes.title}\n          \n          color=\"textSecondary\">User Profile</Typography>\n         \n      {errorAlert && <Alert severity='error'>\n      <AlertTitle>Error</AlertTitle>\n        {errorAlert}\n        </Alert>}\n \n      \n      {success && <Alert severity='success'>\n      <AlertTitle>Success</AlertTitle>\n        Updated Details\n        </Alert>}\n      {error && <Alert severity='error'>\n      <AlertTitle>Error</AlertTitle>\n        {error}\n        </Alert>}\n     \n      <form onSubmit={submitHandler} noValidate autoComplete=\"off\">\n       \n          <TextField  \n            label=\"Name\"\n            type='text'\n            fullWidth\n            id=\"name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            placeholder={user.name}\n            value={name}\n            required\n            onChange={(e) => dispatchUseReducer({type:NAME,payload:e.target.value})}\n          />\n           <TextField  \n            label=\"Email\"\n            type='text'\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            placeholder={user.email}\n            value={email}\n            required\n            onChange={(e) => dispatchUseReducer({type:EMAIL,payload:e.target.value})}\n          />\n        <TextField\n        label=\"Password\"\n        type='password'\n        fullWidth\n        id=\"password\"\n        name=\"password\"\n        autoComplete=\"current-password\"\n        autoFocus\n        placeholder={user.password}\n        value={password}\n        required\n        onChange={(e) => dispatchUseReducer({type:PASSWORD,payload:e.target.value})}\n      />\n\n    <TextField\n      label=\"Confirm Password\"\n      type='password'\n      fullWidth\n      id=\"confirmPassword\"\n      name=\"confirmPassword\"\n      autoComplete=\"current-password\"\n      autoFocus\n      placeholder={user.password}\n      value={confirmPassword}\n      required\n      onChange={(e) => dispatchUseReducer({type:CONFIRM_PASSWORD,payload:e.target.value})}\n    />\n\n     <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth style={{marginTop:'.5rem'}}>\n        Update Profile\n      </Button>\n      </form>\n      </Grid>\n      <Grid item lg={9}>\n      <Typography \n          component=\"div\" \n          variant=\"h3\" \n          className={classes.title}\n          color=\"textSecondary\">My Orders</Typography>\n        {loadingOrders ? (\n          <div>Loading...</div>\n        ) : errorOrders ? (\n          <Alert severity='error'>\n            <AlertTitle>Error</AlertTitle>\n            {errorOrders}\n            </Alert>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"order's table\">\n            <TableHead>\n             <TableRow>\n          \n                <TableCell >ID</TableCell>\n                <TableCell align=\"right\">DATE</TableCell>\n                <TableCell align=\"right\">TOTAL</TableCell>\n                <TableCell align=\"right\">PAID</TableCell>\n                <TableCell align=\"right\">DELIVERED</TableCell>\n                <TableCell align=\"right\">MORE INFO</TableCell>\n                </TableRow>\n                 </TableHead>\n                 <TableBody>\n              {myOrders?.map((order) => (\n                <TableRow key={order._id}>\n                  <TableCell component=\"th\" scope=\"row\">{order._id}</TableCell>\n                  <TableCell align=\"right\">{order.createdAt.substring(0, 10)}</TableCell>\n                  <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                  <TableCell align=\"right\">\n                 \n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <ClearIcon style={{ color: 'red' }}></ClearIcon>\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <ClearIcon style={{ color: 'red' }}></ClearIcon>\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Link to={`/order/${order._id}`}>\n                      <Button variant='inherit'>\n                        Details\n                      </Button>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n            </TableContainer>\n        )}\n      </Grid>\n     \n     </Grid>\n      </Grid>\n      </Grid>\n    )\n    }\n\nexport default Profile"],"sourceRoot":""}