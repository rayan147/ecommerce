{"version":3,"sources":["../node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","components/view/FormContainer.js","actions/admin/adminGetUserDetails.js","actions/admin/adminUpdatedUser.js","pages/AdminEditUser.js"],"names":["AlertTitle","React","props","ref","classes","className","other","_objectWithoutProperties","Typography","_extends","gutterBottom","component","clsx","root","withStyles","theme","fontWeight","typography","fontWeightMedium","marginTop","name","FormContainer","children","xs","md","ADMIN_USER_DETAILS_REQUEST","ADMIN_CONSTANTS","ADMIN_USER_DETAILS_FAILURE","ADMIN_USER_DETAILS_SUCCESS","adminGetUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","USER_DETAILS_RESET","USER_CONSTANTS","USER_DETAILS_SUCCESS","ADMIN_USER_UPDATE_REQUEST","ADMIN_USER_UPDATE_SUCCESS","ADMIN_USER_UPDATE_FAILURE","admninUpdatedUser","user","put","_id","logout","ADMIN_USER_UPDATE_RESET","AdminEditUser","match","history","userId","params","useState","setName","email","setEmail","isAdmin","setIsAdmin","useDispatch","adminGetFromUser","useSelector","state","isLoading","error","adminUpdateUser","loadingUpdate","errorUpdate","successUpdate","isSuccess","useEffect","push","to","Alert","severity","Form","onSubmit","e","preventDefault","adminUpdatedUser","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","label","checked","Button","variant"],"mappings":"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","file":"static/js/23.f9dcecae.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import React from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nconst FormContainer = ({children}) => {\n    return (\n      <Container>\n      <Row className='justify-content-md-center '>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n    )\n}\n\nexport default FormContainer\n","import axios from \"axios\"\nimport ADMIN_CONSTANTS from \"../../constants/adminConstants\"\n\nconst  {\n    ADMIN_USER_DETAILS_REQUEST,\n    ADMIN_USER_DETAILS_FAILURE,\n    ADMIN_USER_DETAILS_SUCCESS,\n    } = ADMIN_CONSTANTS\n    const adminGetUserDetails = (id) => async (dispatch,getState) => {\n        try {\n          dispatch({\n            type: ADMIN_USER_DETAILS_REQUEST,\n          })\n        const {userLogin:{userInfo}} = getState()\n          const config = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${userInfo.token}`\n            },\n          }\n      \n          const { data } = await axios.get( `/api/auth/users/${id}`, config\n          )\n      \n       dispatch({\n            type: ADMIN_USER_DETAILS_SUCCESS,\n            payload: data,\n          })\n      \n        \n        } catch (error) {\n          dispatch({\n            type: ADMIN_USER_DETAILS_FAILURE,\n            payload: error?.response?.data?.message ?? error.message\n          })\n        }\n      }\n\nexport default adminGetUserDetails","import axios from 'axios'\n\nimport ADMIN_CONSTANTS from '../../constants/adminConstants'\nimport { USER_CONSTANTS } from \"../../constants/userConstants\"\n\nimport logout from \"../user/logout\"\n\nconst  {\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    } = USER_CONSTANTS\nconst {\n    ADMIN_USER_UPDATE_REQUEST,\n    ADMIN_USER_UPDATE_SUCCESS,\n    ADMIN_USER_UPDATE_FAILURE,\n   \n} = ADMIN_CONSTANTS;\n \n \n const admninUpdatedUser = (user) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADMIN_USER_UPDATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/auth/users/${user._id}`, user, config)\n  \n      dispatch({ type: ADMIN_USER_UPDATE_SUCCESS })\n  \n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  \n      dispatch({ type: USER_DETAILS_RESET })\n    } catch (error) {\n      const message =error.response?.data?.message ?? error.message\n      if (message === 'Unauthorized,no token provide') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ADMIN_USER_UPDATE_FAILURE,\n        payload: message,\n      })\n    }\n  }\n\n  export default admninUpdatedUser","import React, { useState, useEffect } from 'react'\n\n\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n\n\nimport FormContainer from '../components/view/FormContainer'\nimport  adminGetUserDetails from '../actions/admin/adminGetUserDetails'\nimport adminUpdatedUser from \"../actions/admin/adminUpdatedUser\"\nimport ADMIN_CONSTANTS from '../constants/adminConstants'\n\nconst {ADMIN_USER_UPDATE_RESET} =ADMIN_CONSTANTS\n\nconst AdminEditUser = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const adminGetFromUser = useSelector((state) => state.adminGetFromUser)\n  const { isLoading, error, user } = adminGetFromUser\n\n  const adminUpdateUser = useSelector((state) => state.adminUpdateUser)\n  const {\n    isLoading: loadingUpdate,\n    error: errorUpdate,\n    isSuccess: successUpdate,\n  } = adminUpdateUser\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: ADMIN_USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(adminGetUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(adminUpdatedUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <h2>loading....</h2>}\n        {errorUpdate && <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n          {errorUpdate}\n          </Alert>}\n        {isLoading ? (\n          <h1>loading....</h1>\n        ) : error ? (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {error}\n            </Alert>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default AdminEditUser"],"sourceRoot":""}