{"version":3,"sources":["components/view/FormContainer.js","actions/product/listProductDetails.js","components/view/Message.js","actions/product/updateProduct.js","pages/ProductEdit.js"],"names":["FormContainer","children","className","xs","md","PRODUCT_DETAILS_FAILURE","PRODUCT_CONSTANTS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","listProductDetails","id","dispatch","a","type","axios","data","payload","response","message","Message","severity","Alert","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILURE","updateProduct","product","getState","userInfo","userLogin","config","headers","Authorization","token","put","_id","logout","PRODUCT_UPDATE_RESET","ProductEdit","match","history","productId","params","useState","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","useDispatch","productDetails","useSelector","state","loading","error","productUpdate","loadingUpdate","errorUpdate","successUpdate","success","useEffect","push","uploadFileHandler","e","file","target","files","formData","FormData","append","post","console","to","variant","Form","onSubmit","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","File","label","custom","Button"],"mappings":"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","file":"static/js/22.79d776f1.chunk.js","sourcesContent":["import React from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nconst FormContainer = ({children}) => {\n    return (\n      <Container>\n      <Row className='justify-content-md-center '>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n    )\n}\n\nexport default FormContainer\n","\nimport axios from 'axios';\nimport PRODUCT_CONSTANTS from '../../constants/productConstants'\nconst {\n    PRODUCT_DETAILS_FAILURE,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS\n} = PRODUCT_CONSTANTS\n\n const listProductDetails =(id) => async (dispatch) => {\n   try {\n       dispatch({type: PRODUCT_DETAILS_REQUEST})\n       const {data} = await axios(`/api/products/${id}`)\n       dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data})\n   } catch (error) {\n       dispatch({\n           type: PRODUCT_DETAILS_FAILURE, \n           payload:  error?.response?.data?.message ?? error.message\n        })\n   }\n}\nexport default listProductDetails","\n\n\n\nimport { Alert} from '@material-ui/lab';\n\n\n\nconst Message = ({severity ,children}) => {\n    //  const classes = useStyles()\n  \n    return (\n        <Alert severity={severity} >\n           {children}\n        </Alert>\n    )\n}\n\n// Message.propTypes = {\n//     variant:PropTypes.string\n// }\nexport default Message\n","import axios from 'axios';\nimport PRODUCT_CONSTANTS from '../../constants/productConstants'\nimport logout from \"../user/logout\" \nconst {\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_UPDATE_FAILURE\n   \n} = PRODUCT_CONSTANTS\n \n \n const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_UPDATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(\n        `/api/products/${product._id}`,\n        product,\n        config\n      )\n  \n      dispatch({\n        type: PRODUCT_UPDATE_SUCCESS,\n        payload: data,\n      })\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Unauthorized,no token provide') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: PRODUCT_UPDATE_FAILURE,\n        payload: message,\n      })\n    }\n  }\n\n  export default   updateProduct","\nimport React, { useState, useEffect } from 'react'\n\n\nimport axios from 'axios'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Message from '../components/view/Message'\n\nimport FormContainer from '../components/view/FormContainer'\nimport listProductDetails from '../actions/product/listProductDetails'\nimport updateProduct from '../actions/product/updateProduct'\nimport PRODUCT_CONSTANTS from '../constants/productConstants'\n\n\nconst { PRODUCT_UPDATE_RESET } = PRODUCT_CONSTANTS\n\nconst ProductEdit = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <h2>Loading..</h2>}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <h2>Loading..</h2>\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <h2>Loading..</h2>}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEdit"],"sourceRoot":""}