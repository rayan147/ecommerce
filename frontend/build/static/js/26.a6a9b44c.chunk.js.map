{"version":3,"sources":["actions/user/login.js","pages/Login.js"],"names":["USER_LOGIN_REQUEST","USER_CONSTANTS","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","useStyles","makeStyles","theme","root","display","justifyContent","width","height","maxHeight","margin","maxWidth","borderRadius","marginTop","spacing","boxShadow","paper","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","Login","location","history","classes","useState","setEmail","setPassword","useDispatch","userLogin","useSelector","state","isLoading","error","userInfo","redirect","search","split","useEffect","push","Card","className","CardContent","Alert","severity","AlertTitle","Container","component","CssBaseline","Avatar","Typography","variant","onSubmit","e","preventDefault","noValidate","TextField","value","onChange","target","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","Button","Grid","container","item","xs","Link","href"],"mappings":"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","file":"static/js/26.a6a9b44c.chunk.js","sourcesContent":["import axios from \"axios\"\nimport { USER_CONSTANTS } from \"../../constants/userConstants\"\nconst {USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAILURE} = USER_CONSTANTS\n\nconst login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n          type: USER_LOGIN_REQUEST,\n        })\n    \n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n    \n        const { data } = await axios.post(\n          '/api/users/login',\n          { email, password },\n          config\n        )\n    \n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data,\n        })\n    \n        localStorage.setItem('userInfo', JSON.stringify(data))\n      } catch (error) {\n        dispatch({\n          type: USER_LOGIN_FAILURE,\n          payload: error?.response?.data?.message ?? error.message\n            \n        })\n      }\n}\nexport default login","import {useEffect,useState,lazy} from 'react'\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\n\nimport {useDispatch,useSelector} from 'react-redux'\n\nimport login from '../actions/user/login'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        display:'flex',\n        justifyContent:'center',\n        width:'100%',\n        height:'100%',\n        maxHeight:620,\n        margin:'auto',\n        maxWidth:410,\n        borderRadius:'10px',\n        marginTop:theme.spacing(5),\n        boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px'\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\n\n\n\nconst Login = ({location,history}) => {\n    const classes = useStyles()\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const {isLoading,error,userInfo} = userLogin\n\n    const redirect =location?.search?.split('=')[1] ??  '/'\n\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect)\n        }\n        },[redirect,history,userInfo])\n    const submitHandler = (e) => {\n        e.preventDefault()\n            dispatch(login(email,password))\n    }\n\n    return (\n     \n      <Card className={classes.root} boxShadow={3}>\n            <CardContent>\n              \n            {error && <Alert   severity=\"error\"><AlertTitle>{error}</AlertTitle></Alert>}\n            {error === null &&  isLoading &&  <Alert severity=\"info\"><AlertTitle>Loging in...</AlertTitle></Alert>}\n          \n             <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form  onSubmit={submitHandler} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={email} \n            onChange={e => setEmail(e.target.value)}\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={password} \n            onChange={e => setPassword(e.target.value)}\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/register\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n    </CardContent>\n    </Card> \n\n   \n          \n    )\n}\n\n\nexport default Login\n"],"sourceRoot":""}